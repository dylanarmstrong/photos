name: Deploy to Amazon ECR

on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ vars.AWS_REGION }}
        role-to-assume: ${{ vars.AWS_ROLE_ARN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ vars.AWS_ECR_REPOSITORY }}
        IMAGE_DOMAIN: ${{ vars.IMAGE_DOMAIN }}
        IMAGE_TAG: ${{ github.sha }}
        R2_BUCKET: ${{ vars.R2_BUCKET }}
        R2_ENDPOINT: ${{ vars.R2_ENDPOINT }}
        R2_SECRET: ${{ vars.R2_SECRET }}
        R2_TOKEN: ${{ vars.R2_TOKEN }}
      run: |
        docker buildx build \
          --build-arg="IMAGE_DOMAIN=$IMAGE_DOMAIN" \
          --build-arg="R2_BUCKET=$R2_BUCKET" \
          --build-arg="R2_ENDPOINT=$R2_ENDPOINT" \
          --build-arg="R2_SECRET=$R2_SECRET" \
          --build-arg="R2_TOKEN=$R2_TOKEN" \
          --build-arg="build=true" \
          --platform linux/arm64 \
          --push \
          --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          --tag $ECR_REGISTRY/$ECR_REPOSITORY:latest \
          .
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
